{"version":3,"sources":["components/Button/Button.tsx","components/Calculator.tsx","App.tsx","index.tsx"],"names":["items","ButtonBlock","onClickHandler","className","map","i","value","onClick","Calculator","digit","action","useState","a","setA","b","setB","sign","setSign","actionSum","setActionSum","focus","setFocus","equality","Number","toString","workWithEvents","useCallback","e","includes","console","log","length","alert","num","Math","sqrt","slice","event","currentTarget","onChangeHandler","target","onKeyPressHandler","code","onKeyDownHandler","inputElement","useRef","useEffect","current","readOnly","ref","onKeyPress","autoFocus","onKeyDown","onChange","App","render","document","getElementById"],"mappings":"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","file":"static/js/main.c156c892.chunk.js","sourcesContent":["import React, { MouseEvent } from 'react'\r\nimport './Button.css'\r\n\r\nconst items = [\r\n    'C', '^', '%', '/',\r\n    '7', '8', '9', '*',\r\n    '4', '5', '6', '-',\r\n    '1', '2', '3', '+',\r\n    '00', '0', ',', '=',\r\n]\r\n\r\ntype PropsType = {\r\n    onClickHandler: (e: MouseEvent<HTMLButtonElement>) => void\r\n}\r\n\r\nexport const ButtonBlock: React.FC<PropsType> = ({ onClickHandler }) => {\r\n    return <>\r\n        <hr className='partition' />\r\n        <div className='buttonBlock' >\r\n            {\r\n                items.map(i => <button key={i} value={i} onClick={onClickHandler}\r\n                    className={i === '=' ? 'alreadyStyles' : 'button'}\r\n                > {i} </button>)\r\n            }\r\n        </div>\r\n    </>\r\n}\r\n\r\n","import React, { ChangeEvent, KeyboardEvent, MouseEvent, useCallback, useEffect, useRef, useState } from 'react'\r\nimport { ButtonBlock } from './Button/Button'\r\nimport './Calculator.css'\r\n\r\n\r\nexport const Calculator = () => {\r\n\r\n    const digit = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '00', ',']\r\n    const action = ['/', '*', '-', '+']\r\n\r\n    let [a, setA] = useState<string>('')\r\n    let [b, setB] = useState<string>('')\r\n    let [sign, setSign] = useState<string>('')\r\n\r\n    const [actionSum, setActionSum] = useState(false)\r\n    const [focus, setFocus] = useState(false)\r\n\r\n    const equality = () => {\r\n        // if (b === '') setB(a)\r\n        if (sign === '+') setA((Number(a) + Number(b)).toString())\r\n        if (sign === '-') setA((Number(a) - Number(b)).toString())\r\n        if (sign === '*') setA((Number(a) * Number(b)).toString())\r\n        if (sign === '/') setA((Number(a) / Number(b)).toString())\r\n    }\r\n\r\n    const workWithEvents = useCallback((e: string) => {\r\n        if (digit.includes(e)) {\r\n\r\n            console.log(e);\r\n            if (e == '0' || e == '00') {\r\n                if (a === '') return\r\n                // if (a !== '' && b === '') return\r\n            }\r\n            if (b === '' && sign === '') {\r\n                setA(a += e)\r\n                setActionSum(false)\r\n            } if (a !== '' && b !== '') {\r\n                setB(b += e)\r\n                setActionSum(true)\r\n                if (a !== '' && b === '') {\r\n                    setActionSum(true)\r\n                }\r\n            } else if (sign !== '') {\r\n                setB(b += e)\r\n                setActionSum(true)\r\n                if (a !== '' && b === '') {\r\n                    setActionSum(true)\r\n                }\r\n            }\r\n\r\n        }\r\n        if (a == '0' && a.length < 1) {\r\n\r\n            alert('edsgdf')\r\n        }\r\n        if (action.includes(e)) {\r\n            setSign(sign = e)\r\n        }\r\n        if (e === '=') {\r\n            equality()\r\n        }\r\n        if (e === '%') {\r\n            setActionSum(true)\r\n            let num = Number(a)\r\n            let perc = num * 0.01\r\n            setA((perc).toString())\r\n        }\r\n        if (e === '^') {\r\n            setActionSum(true)\r\n            setA(Math.sqrt(Number(a)).toString())\r\n        }\r\n        if (e === 'C') {\r\n            if (b === '') {\r\n                setA('')\r\n                setSign('')\r\n                setActionSum(false)\r\n            } else {\r\n                setB('')\r\n            }\r\n        }\r\n        if (e === 'A') {\r\n            if (b === '') {\r\n                setA(a.slice(0, -2))\r\n                setSign('')\r\n                setActionSum(false)\r\n            } else {\r\n                setB(b.slice(0, -2))\r\n            }\r\n        }\r\n    }, [a, b])\r\n\r\n    const onClickHandler = useCallback((event: MouseEvent<HTMLButtonElement>) => {\r\n        setFocus(true)\r\n        let e = event.currentTarget.value\r\n        workWithEvents(e)\r\n    }, [workWithEvents])\r\n\r\n    const onChangeHandler = (event: ChangeEvent<HTMLInputElement>) => {\r\n\r\n        const value = event.target.value\r\n        if (value === \"00\") return\r\n\r\n        let e = value.length === 1 ? value : value.slice(-1)\r\n        workWithEvents(e)\r\n        // if (value < a) {\r\n        //     // setA(value)\r\n        //     workWithEvents(value)\r\n        //     // setB(value)\r\n        //     console.log(value)\r\n        // } else if (value.length === 1){\r\n        //     console.log(value.length)\r\n        //     workWithEvents(value)\r\n        // } else {\r\n        //     console.log(value)\r\n        //     workWithEvents(value.slice(-1))\r\n        // }\r\n    }\r\n\r\n    const onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n\r\n        if (e.code === 'NumpadEnter' || e.code === 'Enter') {\r\n            if (b !== '') {\r\n                equality()\r\n                setActionSum(true)\r\n            }\r\n        }\r\n    }\r\n    const onKeyDownHandler = (e: { code: string }) => {\r\n        if (e.code === 'Escape') workWithEvents('C')\r\n        if (e.code === \"Backspace\") workWithEvents('A')\r\n    }\r\n\r\n    const inputElement = useRef<HTMLInputElement | null>(null);\r\n\r\n    useEffect(() => {\r\n        if (inputElement.current) {\r\n            inputElement.current.focus();\r\n        }\r\n    }, [focus]);\r\n\r\n\r\n    return (\r\n        <div className='mainBlock' >\r\n            <div className='display' >\r\n                {\r\n                    actionSum ?\r\n                        <div>\r\n                            <div className='classSumValue'>\r\n                                <input value={a} readOnly /><span>{sign}</span>\r\n                            </div>\r\n                            <div className='classSumTwoValue'>\r\n                                <input ref={inputElement} onKeyPress={onKeyPressHandler} autoFocus\r\n                                    onKeyDown={onKeyDownHandler} onChange={onChangeHandler} value={!b ? '0' : b} />\r\n                            </div>\r\n                        </div>\r\n                        :\r\n                        <div>\r\n                            <div className='classSumValue'>\r\n                                <input value={b} readOnly /><span>{sign}</span>\r\n                            </div>\r\n                            <div className='classValue'  >\r\n                                <input ref={inputElement} onKeyPress={onKeyPressHandler} autoFocus\r\n                                    onKeyDown={onKeyDownHandler} onChange={onChangeHandler} value={!a ? '0' : a} />\r\n                            </div>\r\n                        </div>\r\n                }\r\n            </div>\r\n            <ButtonBlock onClickHandler={onClickHandler} />\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from 'react';\nimport './App.css';\nimport { Calculator } from './components/Calculator';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Calculator />\n    </div>\n  );\n}\n\nexport default App;\n","import './index.css'\r\nimport React from 'react'\r\nimport { render } from 'react-dom'\r\nimport App from './App'\r\n\r\n\r\nrender(\r\n    <App />,\r\n    document.getElementById(\"root\")\r\n)"],"sourceRoot":""}